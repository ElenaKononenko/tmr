{"version":3,"sources":["components/Timer/Timer.module.css","components/Timer/Timer.js","components/Button/Button.js","App.js","index.js"],"names":["module","exports","Timer","time","status","className","s","title","timer","field","value","label","Button","name","onClick","type","Btn","App","useState","setTime","start","setStart","state","setState","WAIT","setWait","Date","now","DATE","setDATE","useEffect","click","fromEvent","document","doubleClick","pipe","buffer","debounceTime","map","list","length","filter","subscription","Observable","observer","intervalId","setInterval","next","clearInterval","takeUntil","subscribe","toUTCString","slice","unsubscribe","startTimer","controls","e","detail","ReactDOM","render","StrictMode","getElementById"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,qBAAqB,MAAQ,uB,2NCElG,SAASC,EAAT,GAAkC,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OACpC,OACE,qCACE,oBAAIC,UAAWC,IAAEC,MAAjB,mBACA,qBAAKF,UAAWC,IAAEE,MAAlB,SACE,sBAAKH,UAAWC,IAAEG,MAAlB,UACE,sBAAMJ,UAAWC,IAAEI,MAAnB,SAA2BP,IAC3B,sBAAME,UAAWC,IAAEK,MAAnB,SAA2BP,Y,qBCPtB,SAASQ,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACrC,OACE,mCACE,wBAAQC,KAAK,SAASV,UAAWC,IAAEU,IAAKF,QAASA,EAAjD,SACGD,MCAM,SAASI,IACtB,MAAwBC,mBAAS,YAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA0BH,mBAAS,QAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAwBL,mBAAS,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAwBP,mBAASQ,KAAKC,OAAtC,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAQC,YAAUC,SAAU,SAC5BC,EAAcH,EAAMI,KACxBC,YAAOL,EAAMI,KAAKE,YAAa,OAC/BC,aAAI,SAAAC,GAAI,OAAIA,EAAKC,UACjBC,aAAO,SAAA/B,GAAK,OAAIA,GAAS,MAYrBgC,EATQ,IAAIC,KAAW,SAAAC,GAC3B,IAAMC,EAAaC,aAAY,WAC7BF,EAASG,SACR,KACH,OAAO,WACLC,cAAcH,OAISV,KAAKc,YAAUf,IAAcgB,UAAU,CAChEH,KAAM,WACJ,OAAQzB,GACN,IAAK,QAEH,YADAH,EAAQ,IAAIO,KAAKA,KAAKC,MAAQC,GAAMuB,cAAcC,MAAM,GAAI,KAE9D,IAAK,OAEH,YADAV,EAAaW,cAGf,QACE,WAKR,OAAO,WACLX,EAAaW,iBAEd,CAAC/B,EAAOM,EAAMJ,IAEjB,IAAM8B,EAAa,WACjBzB,EAAQH,KAAKC,MAAQH,GACrBD,EAAS,SACTF,GAAS,GACTI,EAAQ,IAqBJ8B,EAAWnC,EACf,cAACR,EAAD,CAAQC,KAAK,OAAOC,QAZT,WACXS,EAAS,QACTJ,EAAQ,YACRE,GAAS,MAWT,cAACT,EAAD,CAAQC,KAAK,QAAQC,QAASwC,IAEhC,OACE,qCACE,cAACpD,EAAD,CAAOC,KAAMA,EAAMmD,WAAYA,EAAYlD,OAAQkB,IACnD,sBAAKjB,UAAU,MAAf,UACGkD,EACD,cAAC3C,EAAD,CAAQC,KAAK,OAAOC,QA7Bb,SAAA0C,GACM,IAAbA,EAAEC,SACJlC,EAAS,QACTF,GAAS,GACTI,EAAQC,KAAKC,MAAQC,OA0BnB,cAAChB,EAAD,CAAQC,KAAK,QAAQC,QAjBb,WACZe,EAAQH,KAAKC,OACbR,EAAQ,YACRM,EAAQ,YCpEZiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC3C,EAAD,MAEFgB,SAAS4B,eAAe,W","file":"static/js/main.b72de265.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__2GFug\",\"field\":\"Timer_field__GyMVA\",\"value\":\"Timer_value__2xvie\",\"label\":\"Timer_label__W-6WH\"};","import React from 'react';\nimport s from './Timer.module.css';\n\nexport default function Timer({ time, status }) {\n  return (\n    <>\n      <h1 className={s.title}>Timer</h1>\n      <div className={s.timer}>\n        <div className={s.field}>\n          <span className={s.value}>{time}</span>\n          <span className={s.label}>{status}</span>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport s from './Button.module.css';\n\nexport default function Button({ name, onClick }) {\n  return (\n    <>\n      <button type=\"button\" className={s.Btn} onClick={onClick}>\n        {name}\n      </button>\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Observable, fromEvent } from 'rxjs';\nimport { map, buffer, debounceTime, filter, takeUntil } from 'rxjs/operators';\nimport Timer from './components/Timer';\nimport Button from './components/Button';\nimport './index.css';\n\nexport default function App() {\n  const [time, setTime] = useState('00:00:00');\n  const [start, setStart] = useState(false);\n  const [state, setState] = useState('stop');\n  const [WAIT, setWait] = useState(0);\n  const [DATE, setDATE] = useState(Date.now());\n\n  useEffect(() => {\n    const click = fromEvent(document, 'click');\n    const doubleClick = click.pipe(\n      buffer(click.pipe(debounceTime(300))),\n      map(list => list.length),\n      filter(value => value >= 2),\n    );\n\n    const timer = new Observable(observer => {\n      const intervalId = setInterval(() => {\n        observer.next();\n      }, 1000);\n      return () => {\n        clearInterval(intervalId);\n      };\n    });\n\n    const subscription = timer.pipe(takeUntil(doubleClick)).subscribe({\n      next: () => {\n        switch (state) {\n          case 'start':\n            setTime(new Date(Date.now() - DATE).toUTCString().slice(17, 25));\n            return;\n          case 'stop':\n            subscription.unsubscribe();\n            return;\n\n          default:\n            return;\n        }\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [state, DATE, WAIT]);\n\n  const startTimer = () => {\n    setDATE(Date.now() - WAIT);\n    setState('start');\n    setStart(true);\n    setWait(0);\n  };\n  const wait = e => {\n    if (e.detail === 2) {\n      setState('wait');\n      setStart(false);\n      setWait(Date.now() - DATE);\n    }\n    return;\n  };\n  const stop = () => {\n    setState('stop');\n    setTime('00:00:00');\n    setStart(false);\n  };\n  const reset = () => {\n    setDATE(Date.now());\n    setTime('00:00:00');\n    setWait(0);\n  };\n\n  const controls = start ? (\n    <Button name=\"Stop\" onClick={stop} />\n  ) : (\n    <Button name=\"Start\" onClick={startTimer} />\n  );\n  return (\n    <>\n      <Timer time={time} startTimer={startTimer} status={state} />\n      <div className=\"btn\">\n        {controls}\n        <Button name=\"Wait\" onClick={wait} />\n        <Button name=\"Reset\" onClick={reset} />\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}